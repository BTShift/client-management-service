syntax = "proto3";

import "google/api/annotations.proto";

option csharp_namespace = "ClientManagement.Contract";

package clientmanagement;

// Client management service for managing client records
service ClientManagement {
  // Get a specific client by ID
  rpc GetClient (ClientRequest) returns (ClientResponse) {
    option (google.api.http) = {
      get: "/api/clients/{client_id}"
    };
  }
  
  // List all clients for a tenant
  rpc ListClients (ClientListRequest) returns (ClientListResponse) {
    option (google.api.http) = {
      get: "/api/clients"
    };
  }
  
  // Create a new client
  rpc CreateClient (CreateClientRequest) returns (ClientResponse) {
    option (google.api.http) = {
      post: "/api/clients"
      body: "*"
    };
  }
  
  // Update an existing client
  rpc UpdateClient (UpdateClientRequest) returns (ClientResponse) {
    option (google.api.http) = {
      put: "/api/clients/{client_id}"
      body: "*"
    };
  }
  
  // Delete a client
  rpc DeleteClient (DeleteClientRequest) returns (DeleteClientResponse) {
    option (google.api.http) = {
      delete: "/api/clients/{client_id}"
    };
  }
  
  // Group Management RPCs
  
  // Create a new client group
  rpc CreateGroup (CreateGroupRequest) returns (GroupResponse) {
    option (google.api.http) = {
      post: "/api/groups"
      body: "*"
    };
  }
  
  // Update an existing group
  rpc UpdateGroup (UpdateGroupRequest) returns (GroupResponse) {
    option (google.api.http) = {
      put: "/api/groups/{group_id}"
      body: "*"
    };
  }
  
  // Delete a group
  rpc DeleteGroup (DeleteGroupRequest) returns (DeleteGroupResponse) {
    option (google.api.http) = {
      delete: "/api/groups/{group_id}"
    };
  }
  
  // List all groups for a tenant
  rpc ListGroups (ListGroupsRequest) returns (ListGroupsResponse) {
    option (google.api.http) = {
      get: "/api/groups"
    };
  }
  
  // Add a client to a group
  rpc AddClientToGroup (AddClientToGroupRequest) returns (AddClientToGroupResponse) {
    option (google.api.http) = {
      post: "/api/groups/{group_id}/clients/{client_id}"
    };
  }
  
  // Remove a client from a group
  rpc RemoveClientFromGroup (RemoveClientFromGroupRequest) returns (RemoveClientFromGroupResponse) {
    option (google.api.http) = {
      delete: "/api/groups/{group_id}/clients/{client_id}"
    };
  }
  
  // Get all clients in a group
  rpc GetGroupClients (GetGroupClientsRequest) returns (GetGroupClientsResponse) {
    option (google.api.http) = {
      get: "/api/groups/{group_id}/clients"
    };
  }
  
  // Get all groups for a client
  rpc GetClientGroups (GetClientGroupsRequest) returns (GetClientGroupsResponse) {
    option (google.api.http) = {
      get: "/api/clients/{client_id}/groups"
    };
  }
  
  // User-Client Association RPCs
  
  // Assign a user to a client
  rpc AssignUserToClient (AssignUserToClientRequest) returns (AssignUserToClientResponse) {
    option (google.api.http) = {
      post: "/api/clients/{client_id}/users/{user_id}"
    };
  }
  
  // Remove a user from a client
  rpc RemoveUserFromClient (RemoveUserFromClientRequest) returns (RemoveUserFromClientResponse) {
    option (google.api.http) = {
      delete: "/api/clients/{client_id}/users/{user_id}"
    };
  }
  
  // Get all users assigned to a client
  rpc GetClientUsers (GetClientUsersRequest) returns (GetClientUsersResponse) {
    option (google.api.http) = {
      get: "/api/clients/{client_id}/users"
    };
  }
  
  // Get all clients assigned to a user
  rpc GetUserClients (GetUserClientsRequest) returns (GetUserClientsResponse) {
    option (google.api.http) = {
      get: "/api/users/{user_id}/clients"
    };
  }
}

message ClientRequest {
  string client_id = 1;
}

message ClientResponse {
  string client_id = 1;
  string company_name = 2;
  string country = 3;
  string address = 4;
  string ice_number = 5;
  string rc_number = 6;
  string vat_number = 7;
  string cnss_number = 8;
  string industry = 9;
  string admin_contact_person = 10;
  string billing_contact_person = 11;
  string status = 12;
  string tenant_id = 13;
  string fiscal_year_end = 14;
  string assigned_team_id = 15;
  string created_at = 16;
  string updated_at = 17;
}

message ClientListRequest {
  string tenant_id = 1;
  int32 page = 2;
  int32 page_size = 3;
}

message ClientListResponse {
  repeated ClientInfo clients = 1;
  int32 total_count = 2;
  int32 page = 3;
  int32 page_size = 4;
}

message ClientInfo {
  string client_id = 1;
  string company_name = 2;
  string ice_number = 3;
  string rc_number = 4;
  string vat_number = 5;
  string cnss_number = 6;
  string industry = 7;
  string status = 8;
}

message CreateClientRequest {
  string company_name = 1;
  string country = 2;
  string address = 3;
  string ice_number = 4;
  string rc_number = 5;
  string vat_number = 6;
  string cnss_number = 7;
  string industry = 8;
  string admin_contact_person = 9;
  string billing_contact_person = 10;
  string tenant_id = 11;
  string fiscal_year_end = 12;
  string assigned_team_id = 13;
}

message UpdateClientRequest {
  string client_id = 1;
  string company_name = 2;
  string country = 3;
  string address = 4;
  string ice_number = 5;
  string rc_number = 6;
  string vat_number = 7;
  string cnss_number = 8;
  string industry = 9;
  string admin_contact_person = 10;
  string billing_contact_person = 11;
  string status = 12;
  string fiscal_year_end = 13;
  string assigned_team_id = 14;
}

message DeleteClientRequest {
  string client_id = 1;
}

message DeleteClientResponse {
  bool success = 1;
  string message = 2;
}

// Group Management Messages

message CreateGroupRequest {
  string name = 1;
  string description = 2;
  string tenant_id = 3;
}

message UpdateGroupRequest {
  string group_id = 1;
  string name = 2;
  string description = 3;
}

message DeleteGroupRequest {
  string group_id = 1;
}

message DeleteGroupResponse {
  bool success = 1;
  string message = 2;
}

message GroupResponse {
  string group_id = 1;
  string name = 2;
  string description = 3;
  string tenant_id = 4;
  string created_at = 5;
  string updated_at = 6;
  int32 client_count = 7;
}

message ListGroupsRequest {
  string tenant_id = 1;
  int32 page = 2;
  int32 page_size = 3;
  string search_term = 4;
}

message ListGroupsResponse {
  repeated GroupInfo groups = 1;
  int32 total_count = 2;
  int32 page = 3;
  int32 page_size = 4;
}

message GroupInfo {
  string group_id = 1;
  string name = 2;
  string description = 3;
  int32 client_count = 4;
}

message AddClientToGroupRequest {
  string group_id = 1;
  string client_id = 2;
}

message AddClientToGroupResponse {
  bool success = 1;
  string message = 2;
}

message RemoveClientFromGroupRequest {
  string group_id = 1;
  string client_id = 2;
}

message RemoveClientFromGroupResponse {
  bool success = 1;
  string message = 2;
}

message GetGroupClientsRequest {
  string group_id = 1;
  string tenant_id = 2;
}

message GetGroupClientsResponse {
  repeated ClientInfo clients = 1;
  int32 total_count = 2;
}

message GetClientGroupsRequest {
  string client_id = 1;
  string tenant_id = 2;
}

message GetClientGroupsResponse {
  repeated GroupInfo groups = 1;
  int32 total_count = 2;
}

// User-Client Association Messages

message AssignUserToClientRequest {
  string client_id = 1;
  string user_id = 2;
  string tenant_id = 3;
  string assigned_by = 4; // User ID of the person making the assignment
}

message AssignUserToClientResponse {
  bool success = 1;
  string message = 2;
  string association_id = 3;
}

message RemoveUserFromClientRequest {
  string client_id = 1;
  string user_id = 2;
  string tenant_id = 3;
}

message RemoveUserFromClientResponse {
  bool success = 1;
  string message = 2;
}

message GetClientUsersRequest {
  string client_id = 1;
  string tenant_id = 2;
  int32 page = 3;
  int32 page_size = 4;
}

message GetClientUsersResponse {
  repeated UserInfo users = 1;
  int32 total_count = 2;
  int32 page = 3;
  int32 page_size = 4;
}

message GetUserClientsRequest {
  string user_id = 1;
  string tenant_id = 2;
  int32 page = 3;
  int32 page_size = 4;
}

message GetUserClientsResponse {
  repeated ClientInfo clients = 1;
  int32 total_count = 2;
  int32 page = 3;
  int32 page_size = 4;
}

message UserInfo {
  string user_id = 1;
  string email = 2;
  string first_name = 3;
  string last_name = 4;
  string assigned_at = 5;
  string assigned_by = 6;
}